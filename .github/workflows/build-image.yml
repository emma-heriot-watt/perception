name: Build and push images

on:
  workflow_dispatch:
  release:
    types: [published]
  push:
    branches:
      - main

env:
  PYTHON_VERSION: 3.9
  REGISTRY: ghcr.io
  BASE_IMAGE: emma-heriot-watt/base:latest
  BUILDER_IMAGE: emma-heriot-watt/builder:latest
  REPOSITORY: emma-heriot-watt/perception

jobs:
  build_image:
    name: Build and push image
    runs-on: ubuntu-latest
    strategy:
      matrix:
        torch_version_suffix: ["", "+cu113"]

    permissions:
      contents: read
      packages: write

    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.REPOSITORY }}
          tags: |
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BASE_IMAGE_NAME=${{ env.REGISTRY }}/{{ env.BASE_IMAGE }}
            BUILDER_IMAGE_NAME=${{ env.REGISTRY }}/{{ env.BUILDER_IMAGE }}
            TORCH_VERSION_SUFFIX=${{ matrix.torch_version_suffix }}

      - name: Build, tag, and push the docker image
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          BASE_IMAGE_NAME: ${{ steps.login-ecr.outputs.registry }}/emma/base
          BUILDER_IMAGE_NAME: ${{ steps.login-ecr.outputs.registry }}/emma/builder
          RELEASE_VERSION: ${{ steps.release-tag.outputs.release }}
          TORCH_VERSION_SUFFIX: ${{ matrix.torch_version_suffix }}
        run: |
          IMAGE_TAG=$(echo "$RELEASE_VERSION" | cut -d v -f 2)
          IMAGE_TAG=$(echo "$IMAGE_TAG$TORCH_VERSION_SUFFIX" | tr + -)
          docker build --build-arg BUILDER_IMAGE_NAME --build-arg BASE_IMAGE_NAME --build-arg TORCH_VERSION_SUFFIX --push -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
